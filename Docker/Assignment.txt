                                                Assignment

NOTE: Do not forget to see manual page using "--help" option in command when searching for options/commands for a particular task.

1. Install Docker, either on your native OS or on a VM. Make sure it runs. Type "docker -v" to check if it's installed.

   If you can't install or configure Docker, you can use the online docker setup to do the assignment.
   Step1 Goto:- https://www.katacoda.com/courses/kubernetes/playground
   Step2 Click on "continue" button on the left panel
   Step3 Click on "launch.sh" button on the left panel
   Step4 From the right panel use the top console to execute below command:-
		  docker -v


Try below commands for help
	docker --help  ---> This command shows all available options and commands to work with images and containers
	docker image --help ---> This command shows all the avaialble options and commands to work with docker images
	docker container --help ---> This command shows all the avaialble options and commands to work with docker containers

NOTE:- DO NOT TRY TO USE INTERNET TO SOLVE ASSIGNMENT, BETTER USE THE ABOVE --help OPTION TO SEE THE MANUAL OF ANY PARTICULAR COMMAND AND FIGURE OUT THE SOLUTIONS ON YOUR OWN.

2. Find a image from dockerhub of your choice(recommeded: nginx), don't use browser, pull the official image from dockerhub

   Ans. docker pull nginx

3. List all the available images in your machine/vm, make sure you see recently pulled image in the list.

   Ans. docker images
   
4. Find out the "Full" ImageId of the image that you pulled and write it below.   

   Ans. docker inspect 7ce4f91ef623
        sha256:7ce4f91ef623b9672ec12302c4a710629cd542617c1ebc616a48d06e2a84656a
   
5. Create a container of your image

   Ans. docker run nginx
   
6. List all the running containers

   Ans. docker ps
        CONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS              PORTS               NAMES
        2f654ef5c37d        67da37a9a360           "/coredns -conf /etc…"   3 minutes ago       Up 3 minutes                            k8s_coredns_coredns-66bff467f8-dsdfq_kube-system_de0bff39-5f8a-4a22-8167-30d68378fe4e_0
        a56e3754172b        k8s.gcr.io/pause:3.2   "/pause"                 3 minutes ago       Up 3 minutes                            k8s_POD_coredns-66bff467f8-dsdfq_kube-system_de0bff39-5f8a-4a22-8167-30d68378fe4e_0
        4174c53f9ff8        67da37a9a360           "/coredns -conf /etc…"   3 minutes ago       Up 3 minutes                            k8s_coredns_coredns-66bff467f8-7kfxf_kube-system_6746ab6c-288d-406a-8834-ca034d370f0c_0
        90aede7182e8        k8s.gcr.io/pause:3.2   "/pause"                 3 minutes ago       Up 3 minutes                            k8s_POD_coredns-66bff467f8-7kfxf_kube-system_6746ab6c-288d-406a-8834-ca034d370f0c_0
        d6adcc440e37        4e9f801d2217           "/opt/bin/flanneld -…"   4 minutes ago       Up 4 minutes                            k8s_kube-flannel_kube-flannel-ds-amd64-xvnfq_kube-system_b59dfee7-2e4a-4e5a-ac62-cb0440abeb79_0
        5cfcfaa5b4f7        43940c34f24f           "/usr/local/bin/kube…"   4 minutes ago       Up 4 minutes                            k8s_kube-proxy_kube-proxy-5vg8r_kube-system_545f7b15-1a4b-4814-b58a-404e4d618151_0
        fccd46e7e89a        k8s.gcr.io/pause:3.2   "/pause"                 4 minutes ago       Up 4 minutes                            k8s_POD_kube-flannel-ds-amd64-xvnfq_kube-system_b59dfee7-2e4a-4e5a-ac62-cb0440abeb79_0
        6e08f311b184        k8s.gcr.io/pause:3.2   "/pause"                 4 minutes ago       Up 4 minutes                            k8s_POD_kube-proxy-5vg8r_kube-system_545f7b15-1a4b-4814-b58a-404e4d618151_0
        1431597e3ab9        303ce5db0e90           "etcd --advertise-cl…"   4 minutes ago       Up 4 minutes                            k8s_etcd_etcd-controlplane_kube-system_d4238373bba9474e235fdd845fe18d71_0
        29fb8bc9870b        a31f78c7c8ce           "kube-scheduler --au…"   4 minutes ago       Up 4 minutes                            k8s_kube-scheduler_kube-scheduler-controlplane_kube-system_5795d0c442cb997ff93c49feeb9f6386_0
        62d74304f6f2        74060cea7f70           "kube-apiserver --ad…"   4 minutes ago       Up 4 minutes                            k8s_kube-apiserver_kube-apiserver-controlplane_kube-system_f110356d5928e608ae90e22e0f16cdf1_0
        c779a7267edc        d3e55153f52f           "kube-controller-man…"   4 minutes ago       Up 4 minutes                            k8s_kube-controller-manager_kube-controller-manager-controlplane_kube-system_f9b9c6969be80756638e9cf4927b5881_0
        6d4a338c7e32        k8s.gcr.io/pause:3.2   "/pause"                 4 minutes ago       Up 4 minutes                            k8s_POD_kube-scheduler-controlplane_kube-system_5795d0c442cb997ff93c49feeb9f6386_0
        3b561f716d27        k8s.gcr.io/pause:3.2   "/pause"                 4 minutes ago       Up 4 minutes                            k8s_POD_kube-controller-manager-controlplane_kube-system_f9b9c6969be80756638e9cf4927b5881_0
        6cf1e546b025        k8s.gcr.io/pause:3.2   "/pause"                 4 minutes ago       Up 4 minutes                            k8s_POD_kube-apiserver-controlplane_kube-system_f110356d5928e608ae90e22e0f16cdf1_0
        348bbb4adccd        k8s.gcr.io/pause:3.2   "/pause"                 4 minutes ago       Up 4 minutes                            k8s_POD_etcd-controlplane_kube-system_d4238373bba9474e235fdd845fe18d71_0
   
 7. List all the running and stopped containers
 
    Ans. docker ps -a
         CONTAINER ID        IMAGE                    COMMAND                  CREATED             STATUS                     PORTS               NAMES
         83fd0b80df97        nginx                    "/docker-entrypoint.…"   5 minutes ago       Exited (0) 3 minutes ago                       cranky_black
         2f654ef5c37d        67da37a9a360             "/coredns -conf /etc…"   7 minutes ago       Up 7 minutes                                   k8s_coredns_coredns-66bff467f8-dsdfq_kube-system_de0bff39-5f8a-4a22-8167-30d68378fe4e_0
         a56e3754172b        k8s.gcr.io/pause:3.2     "/pause"                 7 minutes ago       Up 7 minutes                                   k8s_POD_coredns-66bff467f8-dsdfq_kube-system_de0bff39-5f8a-4a22-8167-30d68378fe4e_0
         4174c53f9ff8        67da37a9a360             "/coredns -conf /etc…"   7 minutes ago       Up 7 minutes                                   k8s_coredns_coredns-66bff467f8-7kfxf_kube-system_6746ab6c-288d-406a-8834-ca034d370f0c_0
         90aede7182e8        k8s.gcr.io/pause:3.2     "/pause"                 7 minutes ago       Up 7 minutes                                   k8s_POD_coredns-66bff467f8-7kfxf_kube-system_6746ab6c-288d-406a-8834-ca034d370f0c_0
         d6adcc440e37        4e9f801d2217             "/opt/bin/flanneld -…"   7 minutes ago       Up 7 minutes                                   k8s_kube-flannel_kube-flannel-ds-amd64-xvnfq_kube-system_b59dfee7-2e4a-4e5a-ac62-cb0440abeb79_0
         a909a4dbdbe4        quay.io/coreos/flannel   "cp -f /etc/kube-fla…"   7 minutes ago       Exited (0) 7 minutes ago                       k8s_install-cni_kube-flannel-ds-amd64-xvnfq_kube-system_b59dfee7-2e4a-4e5a-ac62-cb0440abeb79_0
         5cfcfaa5b4f7        43940c34f24f             "/usr/local/bin/kube…"   7 minutes ago       Up 7 minutes                                   k8s_kube-proxy_kube-proxy-5vg8r_kube-system_545f7b15-1a4b-4814-b58a-404e4d618151_0
         fccd46e7e89a        k8s.gcr.io/pause:3.2     "/pause"                 7 minutes ago       Up 7 minutes                                   k8s_POD_kube-flannel-ds-amd64-xvnfq_kube-system_b59dfee7-2e4a-4e5a-ac62-cb0440abeb79_0
         6e08f311b184        k8s.gcr.io/pause:3.2     "/pause"                 7 minutes ago       Up 7 minutes                                   k8s_POD_kube-proxy-5vg8r_kube-system_545f7b15-1a4b-4814-b58a-404e4d618151_0
         1431597e3ab9        303ce5db0e90             "etcd --advertise-cl…"   8 minutes ago       Up 8 minutes                                   k8s_etcd_etcd-controlplane_kube-system_d4238373bba9474e235fdd845fe18d71_0
         29fb8bc9870b        a31f78c7c8ce             "kube-scheduler --au…"   8 minutes ago       Up 8 minutes                                   k8s_kube-scheduler_kube-scheduler-controlplane_kube-system_5795d0c442cb997ff93c49feeb9f6386_0
         62d74304f6f2        74060cea7f70             "kube-apiserver --ad…"   8 minutes ago       Up 8 minutes                                   k8s_kube-apiserver_kube-apiserver-controlplane_kube-system_f110356d5928e608ae90e22e0f16cdf1_0
         c779a7267edc        d3e55153f52f             "kube-controller-man…"   8 minutes ago       Up 8 minutes                                   k8s_kube-controller-manager_kube-controller-manager-controlplane_kube-system_f9b9c6969be80756638e9cf4927b5881_0
         6d4a338c7e32        k8s.gcr.io/pause:3.2     "/pause"                 8 minutes ago       Up 8 minutes                                   k8s_POD_kube-scheduler-controlplane_kube-system_5795d0c442cb997ff93c49feeb9f6386_0
         3b561f716d27        k8s.gcr.io/pause:3.2     "/pause"                 8 minutes ago       Up 8 minutes                                   k8s_POD_kube-controller-manager-controlplane_kube-system_f9b9c6969be80756638e9cf4927b5881_0
         6cf1e546b025        k8s.gcr.io/pause:3.2     "/pause"                 8 minutes ago       Up 8 minutes                                   k8s_POD_kube-apiserver-controlplane_kube-system_f110356d5928e608ae90e22e0f16cdf1_0
         348bbb4adccd        k8s.gcr.io/pause:3.2     "/pause"                 8 minutes ago       Up 8 minutes                                   k8s_POD_etcd-controlplane_kube-system_d4238373bba9474e235fdd845fe18d71_0
         
 8. Find out the "Full" containerId of the container and write it below.
 
    Ans. docker inspect 83fd0b80df97
         83fd0b80df97b942592db3b2c45d822192947cb8cb67159791a802647e186477
         
 9. Find out how many image layers are used to build this image.

    Ans docker inspect nginx
    "Layers": [
                "sha256:346fddbbb0ff19bdb026afb053df490c0c73981a8a985882cf8ee3d716735e87",
                "sha256:2ba086d0a00c756640cb28e9316ccb471b383f6f0aa318c731987f116129c4f1",
                "sha256:66f88fdd699b8547ec4b40a00c1038107293dbebdd1d2a2e4f6fbb7157c795db",
                "sha256:903ae422d007fc44544bba6736df420cd414021e8e756bcece0121322f97defe",
                "sha256:db765d5bf9f8d04c4172cfcdc1334ac3789aa9dc0d2912b4f6d12dee4c5f96fe",
                "sha256:1914a564711c25b473057c8ff608117dfb1936b5390c2b31d0e9226616de8d76"
            ] 
 
 10. Get the Apache Tomcat 7 server image from the docker hub.

     Ans. docker pull tomcat:7

 11. Run the Apache Tomcat 7, I mean create a container of Apache Tomcat.

     Ans. docker run –name tomcat1 -p 8080:8080 tomcat:7

 12. Find out what is the IP Address of the Apache Tomcat Container that it is running on

     Ans. docker tomcat1 inspect

 13. Which Port it is using?

     Ans. 8080
    
 14. Try to access the Tomcat's home page from your machine/vm.

     Ans. localhost:8080/

 15. What is the disk size of Apache Tomcat image?
 
 16. Find out list of all environment variables that is configured for tomcat image, can you see JAVA_HOME and CATALINA_HOME? What did you notice about it?

     Ans. docker tomcat1 inspect

 17. Find out which port is exposed for tomcat?

     Ans. docker tomcat1 inspect

 18. Run multiple containers of tomcat on different port and access it's home page.

     Ans. docker run –name tomcat2 -p 8081:8080 tomcat:7
          docker run –name tomcat3 -p 8082:8080 tomcat:7

 19. Pull ubuntu os from dockerhub, try to pull 2 images of ubuntu, Except the latest one.

     Ans.  docker pull ubuntu:20.04
           docker pull ubuntu:18.04

 20. Run the container of ubuntu in attached mode.

     Ans. docker run -it ubuntu:20.04

 21. Run the container of another ubuntu in detached mode.

     Ans. docker run -d ubuntu:18.04
 
 22. Check how many ubuntu containers are running and stopped

     Ans. docker ps
 
 23. Is the tomcat container running? If no, start one.

     Ans. No
          docker run –name mytomcat1 -p 8080:8080 tomcat:7
  
 24. Check the logs, generated by tomcat container(don't forget to make request to tomcat's home page to see the log).

     Ans. docker logs mytomcat1

 25. Check if ubuntu conatiner is running? If no, start one in attached mode to the terminal.

     Ans. docker run -it ubuntu:20.04

 26. Login as root user in ubuntu container

     Ans. docker run -it ubuntu:20.04

 27. Create a file with any name in root directory

     Ans. touch abc.txt

 28. Install software of your choice in ubuntu container using "apt-get install"

     Ans. apt-get install vlc

 29. Now exit the ubuntu shell, are you back to your host machine, if not, come back to the host machine.

     Ans. exit

 30. Check if the ubuntu container is running.

     Ans. yes
 
 31. Create a new ubuntu container out of the same image as that previous container in attached mode.

     Ans. docker run -it –name ubuntu2 ubuntu:20.04

 32. Login as a root user

 33. Check if you can see the file created in previous container, you will not see the file as well as software that you installed in the previous container. Now kill this Container.

     Ans. docker kill ubuntu2

 34. Do you have the previous ubuntu container where you created the file and installed the software? If no reapeat step 25 to 29.

 35. Create an Image out of the existing container.

     Ans. docker commit lucid_bohr new_ubuntu 
          Lucid_bohr – container name
          New_ubuntu – new image name


 36. Now Create a Container out of this image and login into it to see if you can see the file and software installed by you in the previous container.

     Ans. docker run -it –name new_ubuntu_img new_ubuntu
          Yes the file and software is there.

 37. Do you have running tomcat container? If yes, Stop it and kill all tomcat container.

     Ans. docker kill mytomcat1

 38. Create an index.html file with following code in it:-
	
     <h1>This is Tomcat Container</h1>
Now, Start a tomcat container in such a way that on hitting its URL for home page it should show the above html page.
